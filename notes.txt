<dependency>
    <groupId>org.apache.httpcomponents</groupId>
    <artifactId>httpclient</artifactId>
    <version>4.5.14</version>
</dependency>

@Bean
public RestTemplate getRestTemplate() {
    // Set up connection pooling
    PoolingHttpClientConnectionManager connectionManager = new PoolingHttpClientConnectionManager();
    connectionManager.setMaxTotal(maxConnections);
    connectionManager.setDefaultMaxPerRoute(maxConnectionsPerRoute);

    // Optional: Evict idle connections after 30 seconds
    connectionManager.setValidateAfterInactivity(2000); // Validate connections after 2 seconds of inactivity (optional)
    
    // Create HttpClient with connection manager
    CloseableHttpClient httpClient = HttpClients.custom()
            .setConnectionManager(connectionManager)
            .evictIdleConnections(30, TimeUnit.SECONDS) // Close idle connections after 30 seconds
            .build();

    // Configure request factory with timeouts
    HttpComponentsClientHttpRequestFactory requestFactory = new HttpComponentsClientHttpRequestFactory();
    requestFactory.setHttpClient(httpClient);
    requestFactory.setConnectTimeout(connectTimeout);
    requestFactory.setReadTimeout(readTimeout);

    // Create and return RestTemplate
    RestTemplate restTemplate = new RestTemplate(requestFactory);
    logger.info("RestTemplate configured with connectTimeout={}ms, readTimeout={}ms", connectTimeout, readTimeout);
    return restTemplate;
}
